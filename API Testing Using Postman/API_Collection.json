{
	"info": {
		"_postman_id": "5ec7104c-9408-43f4-af8c-0f6f50890875",
		"name": "Gold_API_testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12564921"
	},
	"item": [
		{
			"name": "Register and Login",
			"item": [
				{
					"name": "POST/auth/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.environment.set(\"valid_email_pribadi\", jsonData.email);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "full_name",
									"value": "{{$randomFullName}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{$randomEmail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "qwerty1234",
									"type": "text"
								},
								{
									"key": "phone_number",
									"value": "087771546233",
									"type": "text"
								},
								{
									"key": "address",
									"value": "{{location}}",
									"type": "text"
								},
								{
									"key": "image",
									"value": "",
									"type": "text"
								},
								{
									"key": "city",
									"value": "Tangerang",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/auth/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{valid_email_pribadi}}\",\r\n  \"password\": \"{{valid_password_pribadi}}\"\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Seller-Product",
			"item": [
				{
					"name": "POST/seller/product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "New Product",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Deskripsi dari barang ini adalah suatu penjelasan tentang barang yang dijual.",
									"type": "text"
								},
								{
									"key": "base_price",
									"value": "5000000",
									"type": "text"
								},
								{
									"key": "category_ids",
									"value": "5",
									"type": "text"
								},
								{
									"key": "location",
									"value": "{{location}}",
									"type": "text"
								},
								{
									"key": "image",
									"type": "file",
									"src": "download.jpg"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/seller/product",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"seller",
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/seller/product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"\r",
									"jsonData.slice(0,2).forEach((item, index) => {\r",
									"    pm.environment.set(`product_id${index}`, item[\"id\"])\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/seller/product",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"seller",
								"product"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/seller/product/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/seller/product/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"seller",
								"product",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{product_id0}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE/seller/product/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/seller/product/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"seller",
								"product",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{product_id0}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Buyer-Product",
			"item": [
				{
					"name": "GET/buyer/product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"\r",
									"jsonData.slice(0,2).forEach((item, index) => {\r",
									"    pm.environment.set(`buyer_product_id${index}`, item[\"id\"])\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/buyer/product?status=&category_id=&search&page=5&per_page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"buyer",
								"product"
							],
							"query": [
								{
									"key": "status",
									"value": ""
								},
								{
									"key": "category_id",
									"value": ""
								},
								{
									"key": "search",
									"value": null
								},
								{
									"key": "page",
									"value": "5"
								},
								{
									"key": "per_page",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/buyer/product/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/buyer/product/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"buyer",
								"product",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{product_id1}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Buyer-Order",
			"item": [
				{
					"name": "POST/buyer/order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"product_id\": 12110,\r\n  \"bid_price\": {{$randomInt}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/buyer/order",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"buyer",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/buyer/order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json()\r",
									"\r",
									"jsonData.slice(0,2).forEach((item, index) => {\r",
									"    pm.environment.set(`buyer_order_id${index}`, item[\"id\"])\r",
									"})\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/buyer/order",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"buyer",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/buyer/order/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/buyer/order/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"buyer",
								"order",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{buyer_order_id0}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT/buyer/order/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "access_token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"bid_price\": 50000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/buyer/order/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"buyer",
								"order",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{buyer_order_id0}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}